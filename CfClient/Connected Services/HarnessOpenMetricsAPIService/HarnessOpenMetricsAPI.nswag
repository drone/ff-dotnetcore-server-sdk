{
  "runtime": "NetCore21",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.0\ninfo:\n  title: Harness feature flag analytics service\n  version: 1.0.0\n  contact:\n    name: Feature Flag - developers\n    url: 'https://www.harness.io'\n    email: cf@harness.io\nservers:\n  - url: /api/1.0\n    description: no host specified\n  - url: 'http://localhost:3000/api/1.0'\n    description: CfClient description\npaths:\n  '/metrics/{environment}':\n    post:\n      summary: Send metrics to the Analytics server.\n      description: Send metrics to Analytics server\n      operationId: postMetrics\n      parameters:\n        - $ref: '#/components/parameters/environmentPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Metrics'\n      security:\n        - BearerAuth: []\n      responses:\n        '200':\n          description: OK\n        '401':\n          $ref: '#/components/responses/Unauthenticated'\n        '403':\n          $ref: '#/components/responses/Unauthorized'\n        '500':\n          $ref: '#/components/responses/InternalServerError'\ncomponents:\n  schemas:\n    KeyValue:\n      type: object\n      properties:\n        key:\n          type: string\n        value:\n          type: string\n      required:\n        - key\n        - value\n    TargetData:\n      type: object\n      properties:\n        identifier:\n          type: string\n        name:\n          type: string\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValue'\n      required:\n        - name\n        - identifier\n        - attributes\n    MetricsData:\n      type: object\n      properties:\n        timestamp:\n          type: integer\n          format: int64\n          example: 1608175465\n          description: time at when this data was recorded\n        count:\n          type: integer\n        metricsType:\n          type: string\n          enum:\n            - FFMETRICS\n          description: This can be of type FeatureMetrics\n        attributes:\n          type: array\n          items:\n            $ref: '#/components/schemas/KeyValue'\n      required:\n        - attributes\n        - count\n        - timestamp\n        - metricsType\n    Metrics:\n      type: object\n      properties:\n        targetData:\n          type: array\n          items:\n            $ref: '#/components/schemas/TargetData'\n        metricsData:\n          type: array\n          items:\n            $ref: '#/components/schemas/MetricsData'\n    Error:\n      type: object\n      properties:\n        code:\n          type: string\n        message:\n          type: string\n      required:\n        - code\n        - message\n  securitySchemes:\n    BearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  parameters:\n    environmentPathParam:\n      name: environment\n      in: path\n      required: true\n      description: environment parameter in query.\n      schema:\n        type: string\n  responses:\n    Unauthenticated:\n      description: Unauthenticated\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    Unauthorized:\n      description: Unauthorized\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n    InternalServerError:\n      description: Internal server error\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Error'\n",
      "url": "C:\\Users\\samar\\source\\repos\\ff-net31-server-sdk\\CfClient\\resorces\\metrics-v1.yaml",
      "output": "HarnessOpenMetricsAPI.nswag.json",
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}Client",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "io.harness.cfsdk.HarnessOpenMetricsAPIService",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "checksumCacheEnabled": false,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "HarnessOpenMetricsAPI.cs",
      "newLineBehavior": "Auto"
    }
  }
}