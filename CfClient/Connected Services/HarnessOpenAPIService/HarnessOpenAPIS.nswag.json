{
  "openapi": "3.0.0",
  "info": {
    "title": "Harness feature flag service client apis",
    "contact": {
      "name": "Feature Flag - developers",
      "url": "https://www.harness.io",
      "email": "cf@harness.io"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/1.0",
      "description": "no host specified"
    },
    {
      "url": "http://localhost:3000/api/1.0",
      "description": "CfClient description"
    }
  ],
  "paths": {
    "/client/env/{environmentUUID}/feature-configs": {
      "get": {
        "summary": "Get all feature flags activations",
        "description": "All feature flags with activations in project environment",
        "operationId": "GetFeatureConfig",
        "parameters": [
          {
            "name": "environmentUUID",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the environment object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeatureConfig"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/client/env/{environmentUUID}/feature-configs/{identifier}": {
      "get": {
        "summary": "Get feature config",
        "operationId": "GetFeatureConfigByIdentifier",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the flag object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentUUID",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the environment object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureConfig"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/client/env/{environmentUUID}/target-segments": {
      "get": {
        "summary": "Retrieve all segments.",
        "description": "Used to retrieve all segments for certain account id.",
        "operationId": "GetAllSegments",
        "parameters": [
          {
            "name": "environmentUUID",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the environment object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Segment"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": ""
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError",
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/client/env/{environmentUUID}/target-segments/{identifier}": {
      "get": {
        "summary": "Retrieve a segment by identifier",
        "description": "Used to retrieve a segment for a certain account id by identifier",
        "operationId": "GetSegmentByIdentifier",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the segment object in the API",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentUUID",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the environment object in the API",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Segment"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": ""
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError",
            "description": ""
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/client/auth": {
      "post": {
        "summary": "Authenticate with the admin server.",
        "description": "Used to retrieve all target segments for certain account id.",
        "operationId": "Authenticate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized",
            "description": ""
          },
          "404": {
            "$ref": "#/components/responses/NotFound",
            "description": ""
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError",
            "description": ""
          }
        }
      }
    },
    "/client/env/{environmentUUID}/target/{target}/evaluations": {
      "get": {
        "summary": "Get feature evaluations for target",
        "operationId": "GetEvaluations",
        "parameters": [
          {
            "name": "environmentUUID",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the environment object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the target object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluations"
                }
              }
            }
          }
        }
      }
    },
    "/client/env/{environmentUUID}/target/{target}/evaluations/{feature}": {
      "get": {
        "summary": "Get feature evaluations for target",
        "operationId": "GetEvaluationByIdentifier",
        "parameters": [
          {
            "name": "environmentUUID",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the environment object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "feature",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the flag object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the target object in the API.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          }
        }
      }
    },
    "/stream": {
      "get": {
        "summary": "Stream endpoint.",
        "operationId": "Stream",
        "parameters": [
          {
            "name": "API-Key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/clusterQueryParam/schema"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string",
                  "default": "text/event-stream"
                }
              },
              "Cache-Control": {
                "schema": {
                  "type": "string",
                  "default": "no-cache"
                }
              },
              "Connection": {
                "schema": {
                  "type": "string",
                  "default": "keep-alive"
                }
              },
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string",
                  "default": "*"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "FeatureState": {
        "type": "string",
        "enum": [
          "on",
          "off"
        ]
      },
      "Variation": {
        "type": "object",
        "required": [
          "identifier",
          "value"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Clause": {
        "type": "object",
        "required": [
          "id",
          "attribute",
          "op",
          "negate",
          "values"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "op": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "negate": {
            "type": "boolean"
          }
        }
      },
      "WeightedVariation": {
        "type": "object",
        "required": [
          "variation",
          "weight"
        ],
        "properties": {
          "variation": {
            "type": "string"
          },
          "weight": {
            "type": "integer"
          }
        }
      },
      "Distribution": {
        "type": "object",
        "required": [
          "bucketBy",
          "variations"
        ],
        "properties": {
          "bucketBy": {
            "type": "string"
          },
          "variations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WeightedVariation"
            }
          }
        }
      },
      "Serve": {
        "type": "object",
        "properties": {
          "distribution": {
            "$ref": "#/components/schemas/Distribution"
          },
          "variation": {
            "type": "string"
          }
        }
      },
      "ServingRule": {
        "type": "object",
        "required": [
          "priority",
          "clauses",
          "serve",
          "ruleId"
        ],
        "properties": {
          "ruleId": {
            "type": "string"
          },
          "priority": {
            "type": "integer"
          },
          "clauses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Clause"
            }
          },
          "serve": {
            "$ref": "#/components/schemas/Serve"
          }
        }
      },
      "Prerequisite": {
        "type": "object",
        "required": [
          "feature",
          "variations"
        ],
        "properties": {
          "feature": {
            "type": "string"
          },
          "variations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TargetMap": {
        "type": "object",
        "required": [
          "idenfifier",
          "name"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "VariationMap": {
        "type": "object",
        "required": [
          "variation"
        ],
        "properties": {
          "variation": {
            "type": "string"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetMap"
            }
          },
          "targetSegments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FeatureConfig": {
        "type": "object",
        "required": [
          "project",
          "environment",
          "feature",
          "state",
          "kind",
          "variations",
          "defaultTarget",
          "offVariation",
          "defaultServe"
        ],
        "properties": {
          "project": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "feature": {
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/FeatureState"
          },
          "kind": {
            "type": "string",
            "enum": [
              "boolean",
              "int",
              "string",
              "json"
            ]
          },
          "variations": {
            "type": "array",
            "minItems": 2,
            "items": {
              "$ref": "#/components/schemas/Variation"
            }
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServingRule"
            }
          },
          "defaultServe": {
            "$ref": "#/components/schemas/Serve"
          },
          "offVariation": {
            "type": "string"
          },
          "prerequisites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prerequisite"
            }
          },
          "variationToTargetMap": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VariationMap"
            }
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Tag": {
        "type": "object",
        "description": "A name and value pair.",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Segment": {
        "type": "object",
        "required": [
          "identifier",
          "name"
        ],
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Unique identifier for the segment."
          },
          "name": {
            "type": "string",
            "description": "Name of the segment.",
            "example": "Beta Testers"
          },
          "environment": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "included": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target"
            }
          },
          "excluded": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target"
            }
          },
          "rules": {
            "type": "array",
            "description": "An array of rules that can cause a user to be included in this segment.",
            "items": {
              "$ref": "#/components/schemas/Clause"
            }
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "modifiedAt": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Target": {
        "type": "object",
        "required": [
          "identifier",
          "name",
          "environment",
          "project",
          "account",
          "org"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "org": {
            "type": "string"
          },
          "environment": {
            "type": "string"
          },
          "project": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "anonymous": {
            "type": "boolean"
          },
          "attributes": {
            "type": "object"
          },
          "createdAt": {
            "type": "integer",
            "format": "int64"
          },
          "segments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AuthenticationRequest": {
        "type": "object",
        "required": [
          "apiKey"
        ],
        "properties": {
          "apiKey": {
            "type": "string",
            "example": "896045f3-42ee-4e73-9154-086644768b96"
          },
          "target": {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "identifier": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "anonymous": {
                "type": "boolean"
              },
              "attributes": {
                "type": "object"
              }
            }
          }
        }
      },
      "AuthenticationResponse": {
        "type": "object",
        "required": [
          "authToken"
        ],
        "properties": {
          "authToken": {
            "type": "string"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "required": [
          "pageCount",
          "itemCount",
          "pageSize",
          "pageIndex",
          "pageIndex"
        ],
        "properties": {
          "version": {
            "type": "integer"
          },
          "pageCount": {
            "type": "integer"
          },
          "itemCount": {
            "type": "integer",
            "example": "1"
          },
          "pageSize": {
            "type": "integer",
            "example": "1"
          },
          "pageIndex": {
            "type": "integer",
            "example": "0"
          }
        }
      },
      "Evaluation": {
        "type": "object",
        "required": [
          "flag",
          "value",
          "kind"
        ],
        "properties": {
          "flag": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          }
        }
      },
      "Evaluations": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Evaluation"
        }
      }
    },
    "responses": {
      "Unauthenticated": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters": {
      "clusterQueryParam": {
        "name": "clusterIdentifier",
        "in": "query",
        "description": "Unique identifier for the cluster for the account",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}